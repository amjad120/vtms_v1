plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // نقلناها هنا مع بقية plugins
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace "com.example.flutter_application_10"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion "25.1.8937393" // الإصدار المطلوب الذي حددته

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.example.flutter_application_10"
        minSdkVersion 25 // أو flutter.minSdkVersion إذا كنت تريد استخدام القيمة الافتراضية
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true // إضافة إذا كنت تستخدم العديد من المكتبات
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            // يمكنك إضافة هذه للإصدار النهائي
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    // أضف أي مكتبات أخرى تحتاجها هنا
    implementation 'androidx.multidex:multidex:2.0.1' // إذا كنت بحاجة إلى multiDex
}